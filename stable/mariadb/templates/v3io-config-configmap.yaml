apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-v3io-config
  labels:
    app: {{ template "mariadb.name" . }}
    chart: {{ template "mariadb.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
data:
{{ include "v3io-configs.java.configMap" . | indent 2 }}

  health_check.sh: |
    mysqladmin status
    RC=$?
    if [ "$RC" -ne "0" ]; then
      echo "Unable to get status of MySQL database server. Exit with code: $RC"
      exit $RC
    fi
    exit 0

  v3io-mariadb.sh: |
    #!/usr/bin/env bash
    set -ex

{{ include "v3io-configs.script.lookupService" . | indent 4 }}
    touch $HOME/.bashrc
    echo "alias ll='ls -la'" >> $HOME/.bashrc
    . $HOME/.bashrc

    echo "Current user -> $(whoami)"
    echo "Starting MariaDB..."
    # Init database in a temporary directory (workaround for the access issue on Fuse, see IG-11127)
    mysql_install_db --user=mysql --basedir=/usr --datadir=/tmp/mysql
    # and then copy the init files into real working directory (on Fuse mount)
    cp -R /tmp/mysql /var/lib/
    # schedule init script (should run after service has started)
    ( sleep {{ .Values.db.initDelay }} ; mysql -uroot --protocol=tcp < /docker-entrypoint-initdb.d/create-hive-metastore.sql ) &
    # start the database server daemon
    mysqld
