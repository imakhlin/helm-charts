apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-v3io-config
  labels:
    app: {{ template "mariadb.name" . }}
    chart: {{ template "mariadb.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
data:
{{ include "v3io-configs.java.configMap" . | indent 2 }}

  health_check.sh: |
    mysqladmin status
    RC=$?
    if [ "$RC" -ne "0" ]; then
      echo "Unable to get status of MySQL database server. Exit with code: $RC"
      exit $RC
    fi
    exit 0

  init-v3io-mariadb.sh: |
    #!/usr/bin/env bash
    set -ex

    echo "Current user -> $(whoami)"
    LOCK_FILE=/var/lib/mysql/.init-complete
    if [ -f $LOCK_FILE ]
    then
      echo "MariaDB has already been initialized. Skipping..."
    else
      echo "Initializing MariaDB..."

      mysql_install_db --user=mysql --basedir=/usr --datadir=/tmp/mysql
      # and then copy the init files into real working directory (on Fuse mount)
      cp -R /tmp/mysql /var/lib/

      touch $LOCK_FILE
    fi

  v3io-mariadb.sh: |
    #!/usr/bin/env bash
    set -ex

{{ include "v3io-configs.script.lookupService" . | indent 4 }}
    touch $HOME/.bashrc
    echo "alias ll='ls -la'" >> $HOME/.bashrc
    . $HOME/.bashrc

    echo "Current user -> $(whoami)"

    LOCK_FILE=/var/lib/mysql/.allow-remote-access-complete
    if [ ! -f $LOCK_FILE ]
    then
      MYSQL_CONFIG=/etc/mysql/my.cnf
      INIT_SCRIPT="/docker-entrypoint-initdb.d/enable-root-remote-access.sql"

      # Call init script on startup
      echo "" >> $MYSQL_CONFIG
      echo "[mysqld]" >> $MYSQL_CONFIG
      echo "init-file=$INIT_SCRIPT" >> $MYSQL_CONFIG

      touch $LOCK_FILE
    fi

    echo "Starting MariaDB..."
    # start the database server daemon
    mysqld
