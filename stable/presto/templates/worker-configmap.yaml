{{- if gt (int .Values.server.workers) 0 }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "presto.worker" . }}
  labels:
    app: {{ template "presto.name" . }}
    chart: {{ template "presto.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    component: worker
data:
  node.properties: |
{{- if (eq .Values.server.node.properties.override true) }}
    # ============= Custom node properties ==========
    {{- range .Values.server.node.properties.custom }}
    {{ . }}
    {{- end }}
{{- else }}
    node.environment={{ .Values.server.node.environment }}
    node.data-dir={{ .Values.server.node.dataDir }}
{{- if .Values.server.node.properties.custom }}
    # ============= Custom node properties ==========
    {{- range .Values.server.node.properties.custom }}
    {{ . }}
    {{- end }}
{{- end }}
{{- end }}

  jvm.config: |
{{- if (eq .Values.server.jvm.properties.override true) }}
    # ============= Custom jvm properties ==========
    {{- range .Values.server.jvm.properties.custom }}
    {{ . }}
    {{- end }}
{{- else }}
    -server
    -Xmx{{ .Values.server.jvm.maxHeapSize }}
    -XX:+{{ .Values.server.jvm.gcMethod.type }}
    -XX:G1HeapRegionSize={{ .Values.server.jvm.gcMethod.g1.heapRegionSize }}
    -XX:+UseGCOverheadLimit
    -XX:+ExplicitGCInvokesConcurrent
    -XX:+HeapDumpOnOutOfMemoryError
    -XX:+ExitOnOutOfMemoryError
{{- if .Values.server.jvm.properties.custom }}
    # ============= Custom jvm properties ==========
    {{- range .Values.server.jvm.properties.custom }}
    {{ . }}
    {{- end }}
{{- end }}
{{- end }}

  config.properties: |
{{- if (eq .Values.server.config.properties.override true) }}
    # ============= Custom config properties ==========
    {{- range .Values.server.config.properties.custom }}
    {{ . }}
    {{- end }}
    coordinator=false
{{- else }}
    coordinator=false
    http-server.http.port={{ .Values.server.config.http.port }}
{{- if .Values.server.config.https }}
    http-server.https.enabled=true
    http-server.https.port={{ .Values.server.config.https.port }}
    http-server.https.keystore.path={{ .Values.server.config.https.keystore }}
    http-server.https.keystore.key={{ .Values.server.config.https.passphrase }}
    http-server.authentication.type=PASSWORD
{{- end }}
    query.max-memory={{ .Values.server.config.query.maxMemory }}
    query.max-memory-per-node={{ .Values.server.config.query.maxMemoryPerNode }}
    discovery.uri=http://{{ template "presto.fullname" . }}.{{ .Release.Namespace }}.svc:{{ .Values.server.config.http.port }}
{{- if .Values.server.config.properties.custom }}
    # ============= Custom config properties ==========
    {{- range .Values.server.config.properties.custom }}
    {{ . }}
    {{- end }}
{{- end }}
{{- end }}

{{ if .Values.server.config.https }}
  password-authenticator.properties: |
    password-authenticator.name=v3io
{{- end }}

{{ if .Values.server.log }}
  log.properties: |
{{- if (eq .Values.server.log.properties.override true) }}
    # ============= Custom log properties ==========
    {{- range .Values.server.log.properties.custom }}
    {{ . }}
    {{- end }}
{{- else }}
{{- range $key, $val := .Values.server.log }}
{{ printf "%s=%s" $key $val | indent 4}}
{{- end }}
{{ end -}}

{{- range $key, $val := .Values.server.config.extra }}
{{ printf "%s: |" $key | indent 2 }}
{{ $val | indent 4 }}
{{- end }}
{{- if .Values.server.log.properties.custom }}
    # ============= Custom log properties ==========
    {{- range .Values.server.log.properties.custom }}
    {{ . }}
    {{- end }}
{{- end }}
{{- end }}

  health_check.sh: |
    #!/usr/bin/env bash

    set -e
{{ include "v3io-configs.script.javaHealthCheckTest" . | indent 4 }}
    curl --disable --silent --fail --connect-timeout 10 {{ template "presto.fullname" . }}.{{ .Release.Namespace }}.svc:{{ .Values.server.config.http.port }}/v1/node | tr "," "\n" | grep --silent $(hostname -i)
    CONFIGURED_V3IOD=$(grep "socket.host" $IGZ_DATA_CONFIG_FILE | cut -f2 -d"=")
    if [ "${CONFIGURED_V3IOD}" != "CURRENT_NODE_IP" ]; then
      /var/run/iguazio/daemon_health/healthz --host ${CONFIGURED_V3IOD}
    fi

  daemon-health.sh: |
    #!/usr/bin/env bash

    cp /usr/local/bin/healthz /var/run/iguazio/daemon_health/healthz

{{- if .Values.server.config.https }}
  create-cert.sh: |
    #!/bin/bash

    set -e

    echo -n "{{ .Values.server.config.https.keystoreBinary }}" | base64 --decode > {{ .Values.server.config.https.keystore }}
{{- end }}

{{- if .Values.hive }}
  hive.properties: |
    connector.name=hive-hadoop2
    hive.metastore.uri=thrift://{{ .Values.hive.hostname }}:{{ .Values.hive.port }}
{{- end }}

  docker-presto.sh: |
    #!/bin/bash
    cp {{ .Values.server.config.mapPath }}/*.properties $PRESTO_CONF_DIR
    cp {{ .Values.server.config.mapPath }}/*.config $PRESTO_CONF_DIR

{{- if .Values.server.configuration.files }}

    # Start creating custom configuration files
{{- range $name, $content := .Values.server.configuration.files }}
{{ printf "echo -n '%s' | base64 --decode > $PRESTO_CONF_DIR/%s" $content $name | indent 4 }}
{{- end }}
    # Finish creating custom configuration files
{{- end }}

{{- if .Values.hive }}

    # Hive configuration
    echo hive.config.resources=${HADOOP_CONF_DIR}/core-site.xml,${HADOOP_CONF_DIR}/hdfs-site.xml >> $PRESTO_CONF_DIR/hive.properties
    mv $PRESTO_CONF_DIR/hive.properties $PRESTO_CONF_DIR/catalog/hive.properties

    # Hive dependencies
    ln -s ${PRESTO_HOME}/plugin/v3io/v3io-hcfs_${SCALA_MAJOR_VERSION}.jar ${PRESTO_HOME}/plugin/hive-hadoop2/v3io-hcfs_${SCALA_MAJOR_VERSION}.jar
    ln -s ${PRESTO_HOME}/plugin/v3io/scala-library-${SCALA_VERSION}.jar ${PRESTO_HOME}/plugin/hive-hadoop2/scala-library-${SCALA_VERSION}.jar
{{- end }}

    launcher run

---
{{- end }}
